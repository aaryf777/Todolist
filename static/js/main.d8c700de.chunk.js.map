{"version":3,"sources":["Todoitem.jsx","Todoapp.jsx","reportWebVitals.js","index.js"],"names":["TodoItem","props","className","text","onClick","onSelect","index","Todoapp","curr_key","today","Date","toLocaleDateString","weekday","month","day","useState","inputValue","setInputValue","inputlist","setInputlist","deleteItem","console","log","oldItem","filter","currElem","indNo","oldVal","type","onChange","event","target","value","placeholder","map","itemVal","ind","Todoitem","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"2LAceA,EAZE,SAACC,GACd,OACA,mCACA,sBAAKC,UAAY,YAAjB,UACA,6BAAKD,EAAME,OACX,mBAAGD,UAAU,uBAAuBE,QAAW,WAC3CH,EAAMI,SAASJ,EAAMK,gBCwEdC,MA3Ef,WAEI,IAAIC,EAAW,EAETC,GAAQ,IAAIC,MAAOC,mBAAmB,QAD5B,CAAEC,QAAS,OAAQC,MAAO,QAASC,IAAK,YAHzC,EAKqBC,mBAAS,IAL9B,mBAKRC,EALQ,KAKIC,EALJ,OAMmBF,mBAAS,IAN5B,mBAMRG,EANQ,KAMGC,EANH,KAuBTC,EAAa,SAACd,GAChBe,QAAQC,IAAI,WACZH,GAAa,SAACI,GACV,OAAOA,EAAQC,QAAO,SAACC,EAAUC,GAC7B,GAAIA,GAASpB,EACT,OAAOmB,SAWvB,OAEI,mCACI,sBAAKvB,UAAU,gBAAf,UACI,qBAAKA,UAAU,OAAf,SACKO,IAIL,sBAAKP,UAAU,aAAf,UACI,wBAAQE,QApCR,WACZe,GAAa,SAACQ,GACV,MAAM,GAAN,mBAAWA,GAAX,CAAmBX,OAGvBC,EAAc,KA+BF,eACA,uBAAOW,KAAK,OAAOC,SAzCjB,SAACC,GACfb,EAAca,EAAMC,OAAOC,QAwCyBC,YAAY,gBAAgBD,MAAOhB,OAI/E,6BAGQE,EAAUgB,KAAI,SAACC,EAASC,GACpB,OAAO,cAACC,EAAD,CACHlC,KAAMgC,EACN7B,MAAO8B,EACP/B,SAAUe,GACLZ,gBCvDtB8B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,mCACA,qBAAK9C,UAAY,YAAjB,SACI,cAAC,EAAD,QAIJ+C,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.d8c700de.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst TodoItem = (props) => {\r\n    return (\r\n    <>\r\n    <div className = \"todostyle\">\r\n    <li>{props.text}</li>\r\n    <i className=\"fa fa-trash-o delete\" onClick = {() =>{\r\n        props.onSelect(props.index);\r\n    }} ></i>\r\n    </div>\r\n    </>\r\n    )\r\n}\r\nexport default TodoItem;","import React, { useState } from 'react';\r\nimport ReactDom from 'react-dom';\r\nimport Todoitem from './Todoitem';\r\n\r\n\r\nfunction Todoapp() {\r\n\r\n    let curr_key = 0;\r\n    const options = { weekday: \"long\", month: \"short\", day: \"numeric\" };\r\n    const today = new Date().toLocaleDateString(\"en-US\", options);\r\n    const [inputValue, setInputValue] = useState(\"\");\r\n    const [inputlist, setInputlist] = useState([]);\r\n\r\n\r\n    const itemEvent = (event) => {\r\n        setInputValue(event.target.value);\r\n    };\r\n\r\n    const addItem = () => {\r\n        setInputlist((oldVal) => {\r\n            return [...oldVal, inputValue]\r\n\r\n        });\r\n        setInputValue('');\r\n\r\n\r\n    }\r\n\r\n    const deleteItem = (index) => {\r\n        console.log('clicked');\r\n        setInputlist((oldItem) => {\r\n            return oldItem.filter((currElem, indNo) => {\r\n                if (indNo != index) {\r\n                    return currElem;\r\n                }\r\n            })\r\n        })\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    return (\r\n\r\n        <>\r\n            <div className=\"headcontainer\">\r\n                <div className=\"date\">\r\n                    {today}\r\n\r\n                </div>\r\n\r\n                <div className=\"inputblock\">\r\n                    <button onClick={addItem}>+</button>\r\n                    <input type='text' onChange={itemEvent} placeholder=\"Add todo item\" value={inputValue} />\r\n\r\n                </div>\r\n\r\n                <ol>\r\n\r\n                    {\r\n                        inputlist.map((itemVal, ind) => {\r\n                            return <Todoitem\r\n                                text={itemVal}\r\n                                index={ind}\r\n                                onSelect={deleteItem}\r\n                                key={curr_key++}\r\n                            />\r\n\r\n\r\n                        })\r\n                    }\r\n\r\n                </ol>\r\n            </div>\r\n        </>\r\n\r\n    );\r\n};\r\nexport default Todoapp;\r\n\r\n\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Todoapp from './Todoapp';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <>\n  <div className = \"container\">\n      <Todoapp/>\n  </div>\n  </>,\n \n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}